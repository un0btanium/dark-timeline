{"version":3,"sources":["data/locations.js","components/svg/svg-viewbox.component.js","components/svg/character-line.component.js","components/svg/location.component.js","data/characterColors.js","data/days/15.11.2019.js","components/timeline.component.js","App.js","serviceWorker.js","index.js"],"names":["SVGViewbox","style","background","width","height","xmlns","this","props","children","Component","CharacterLine","currentCoords","pathString","i","previousCoords","character","lines","element","x","time","y","locations","year","location","offset","type","console","error","distance","Math","min","abs","state","color","d","fill","stroke","strokeWidth","name","hoveredCharacter","onMouseEnter","onCharacterHover","onMouseLeave","undefined","Location","setState","fontFamily","displayName","data","2019","description","1986","locationName","characters","events","j","Timeline","bind","episode","currentDay","currentMonth","11","15","day15_11_2019","characterColors","push","key","characterLines","map","characterName","App","className","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46c26ad3.chunk.js","sourcesContent":["var data = {\r\n\t2019: {\r\n\t\t\"Nielsen Home\": {\r\n\t\t\tdisplayName: \"Nielsen Home\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 75\r\n\t\t},\r\n\t\t\"Street\": {\r\n\t\t\tdisplayName: \"Street\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 40\r\n\t\t},\r\n\t\t\"Bridge\": {\r\n\t\t\tdisplayName: \"Bridge\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 40\r\n\t\t},\r\n\t\t\"Forrest\": {\r\n\t\t\tdisplayName: \"Forrest\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 40\r\n\t\t},\r\n\t\t\"Caves\": {\r\n\t\t\tdisplayName: \"Caves\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 40\r\n\t\t},\r\n\t\t\"Wormhole\": {\r\n\t\t\tdisplayName: \"Einstein-Rosen Bridge\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 40\r\n\t\t},\r\n\t},\r\n\t1986: {\r\n\t\t\"Nielsen Home\": {\r\n\t\t\tdisplayName: \"Nielsen Home\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 75\r\n\t\t},\r\n\t\t\"Street\": {\r\n\t\t\tdisplayName: \"Street\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 40\r\n\t\t},\r\n\t\t\"Bridge\": {\r\n\t\t\tdisplayName: \"Bridge\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 40\r\n\t\t},\r\n\t\t\"Forrest\": {\r\n\t\t\tdisplayName: \"Forrest\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 40\r\n\t\t},\r\n\t\t\"Caves\": {\r\n\t\t\tdisplayName: \"Caves\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 40\r\n\t\t},\r\n\t\t\"Wormhole\": {\r\n\t\t\tdisplayName: \"Einstein-Rosen Bridge\",\r\n\t\t\tdescription: \"Some sample text\",\r\n\t\t\theight: 40\r\n\t\t},\r\n\t}\r\n};\r\n\r\n\r\nlet yearOrder = [2019, 1986];\r\n\r\nlet y = 25;\r\nfor (var year of yearOrder) {\r\n\tfor (var locationName in data[year]) {\r\n\t\tdata[year][locationName].y = y;\r\n\t\ty += data[year][locationName].height + 5;\r\n\t}\r\n\ty += 50;\r\n}\r\n\r\n\r\nexport default data;","import React, {Component} from 'react';\r\n\r\n\r\n\r\nexport default class SVGViewbox extends Component {\r\n\r\n\t// constructor(props) {\r\n\t// \tsuper(props);\r\n\t// }\r\n\t\r\n    render () {\r\n\t\treturn (\r\n\t\t\t<svg\r\n\t\t\t\tstyle={{ background: '#222222' }}\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\theight=\"900px\"\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</svg>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n\r\n\r\n\r\nexport default class CharacterLine extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t/* connection:\r\n\t\t\t{\r\n\t\t\t\tdate: { day, month, year }\r\n\t\t\t\ttime: 0900  // military time; use this to derive a x position on app startup (see below) (or create a script that transforms it prior, easy to do once code is created)\r\n\t\t\t\tcoords: {\r\n\t\t\t\t\tstart: { x, y },\r\n\t\t\t\t\tend: { x, y }\r\n\t\t\t\t},\r\n\t\t\t\tcharacterId: \"\" // get color from different array (or save character id here, so that we can then based on episode do what needs to be done)\r\n\t\t\t\t// two counter for each character: total and for each time\r\n\t\t\t}\r\n\r\n\t\t\tselected: characterName // if character names align increase the width\r\n\t\t\tcharacterColors: { \"characterName\": \"color\"} // saves color values\r\n\t\t*/\r\n\r\n\t\t\r\n\r\n\r\n\t\tlet pathString = \"\";\r\n\t\tlet i = 0;\r\n\t\tlet previousCoords = {};\r\n\t\tlet currentCoords;\r\n\t\tfor (var element of this.props.character.lines) {\r\n\t\t\tif (i === 0) {\r\n\t\t\t\tcurrentCoords = {\r\n\t\t\t\t\tx: (element.time/100)*62.5,\r\n\t\t\t\t\ty: this.props.locations[element.year || previousCoords.year][element.location].y + element.offset,\r\n\t\t\t\t\tyear: element.year || previousCoords.year\r\n\t\t\t\t};\r\n\t\t\t\tswitch(element.type) {\r\n\t\t\t\t\tcase 'idle':\r\n\t\t\t\t\t\t\tpathString += \"M \" + currentCoords.x + \",\" + currentCoords.y + \"\\n\";\r\n\t\t\t\t\t\t\tpreviousCoords = { x: currentCoords.x, y: currentCoords.y, year: currentCoords.year };\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase 'arrival':\r\n\t\t\t\t\t\t\tpathString += \"M \" + (currentCoords.x-15) + \",\" + (currentCoords.y-7.5) + \"\\n\";\r\n\t\t\t\t\t\t\tpathString += \"Q \"+ (currentCoords.x-7.5) + \",\" + currentCoords.y + \" \" +\r\n\t\t\t\t\t\t\t\t\t\t\t\t(currentCoords.x) + \",\" + currentCoords.y + \"\\n\";\r\n\t\t\t\t\t\t\t\t\t\t\t\tpreviousCoords = { x: currentCoords.x, y: currentCoords.y, year: currentCoords.year };\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.error(\"Unknown starting connection \" + element.type)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tif (((element.time/100)*62.5) !== previousCoords.x) {\r\n\t\t\t\t\tcurrentCoords = { x: ((element.time/100)*62.5), y: previousCoords.y };\r\n\t\t\t\t\tpathString += \"L \" + currentCoords.x + \",\" + currentCoords.y + \"\\n\";\r\n\t\t\t\t\tpreviousCoords = { x: currentCoords.x, y: currentCoords.y, year: previousCoords.year };\r\n\t\t\t\t}\r\n\t\t\t\tswitch(element.type) {\r\n\t\t\t\t\tcase 'idle':\r\n\t\t\t\t\t\t\tcurrentCoords = { x: ((element.time/100)*62.5), y: previousCoords.y };\r\n\t\t\t\t\t\t\tpathString += \"L \" + currentCoords.x + \",\" + currentCoords.y + \"\\n\";\r\n\t\t\t\t\t\t\tpreviousCoords = { x: currentCoords.x, y: currentCoords.y, year: previousCoords.year };\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'timetravel':\r\n\t\t\t\t\t\t\tcurrentCoords = { x: previousCoords.x, y: this.props.locations[element.year][element.location].y + element.offset };\r\n\t\t\t\t\t\t\tpathString += \"L \" + currentCoords.x + \",\" + currentCoords.y + \"\\n\";\r\n\t\t\t\t\t\t\tpreviousCoords = { x: currentCoords.x, y: currentCoords.y, year: element.year };\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'travel':\r\n\t\t\t\t\t\t\tlet distance = 50*(Math.min(100, Math.abs(this.props.locations[previousCoords.year][element.location].y-previousCoords.y))/100);\r\n\t\t\t\t\t\t\tcurrentCoords = { x: ((element.time/100)*62.5)+distance+element.offset, y: this.props.locations[previousCoords.year][element.location].y + element.offset };\r\n\t\t\t\t\t\t\t// let a = Math.abs(currentCoords.y-previousCoords.y)/100;\r\n\t\t\t\t\t\t\tlet a = 0;\r\n\t\t\t\t\t\t\tpathString += \"C \"+ (currentCoords.x+a) + \",\" + (previousCoords.y-a) + \" \" +\r\n\t\t\t\t\t\t\t\t\t\t\t\t(previousCoords.x-a) + \",\" + (currentCoords.y+a) + \" \" +\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentCoords.x + \",\" + currentCoords.y + \"\\n\";\r\n\t\t\t\t\t\t\tpreviousCoords = { x: currentCoords.x, y: currentCoords.y, year: previousCoords.year };\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'exit':\r\n\t\t\t\t\t\t\tcurrentCoords = { x: previousCoords.x+15, y: previousCoords.y-7.5 };\r\n\t\t\t\t\t\t\tpathString += \"Q \"+ (currentCoords.x-7.5) + \",\" + (previousCoords.y) + \" \" +\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentCoords.x+25 + \",\" + currentCoords.y + \"\\n\";\r\n\t\t\t\t\t\t\tpreviousCoords = { x: currentCoords.x, y: currentCoords.y, year: previousCoords.year };\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.error(\"Unknown type \" + element.type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\tthis.state = {\r\n\t\t\tpathString: pathString,\r\n\t\t\tcolor: \"#D500F9\"\r\n\t\t}\r\n\t}\r\n\t\r\n    render () {\r\n\r\n\t\treturn (\r\n\t\t\t<path\r\n\t\t\t\td={this.state.pathString}\r\n\t\t\t\tfill=\"none\"\r\n\t\t\t\tstroke={this.props.color}\r\n\t\t\t\tstrokeWidth={this.props.character.name === this.props.hoveredCharacter? 6 : 4}\r\n\t\t\t\tonMouseEnter={() => this.props.onCharacterHover(this.props.character.name)}\r\n\t\t\t\tonMouseLeave={() => this.props.onCharacterHover(undefined)}\r\n\t\t\t\t// onMouseEnter={() => this.setState({ width: 6})}\r\n\t\t\t\t// onMouseLeave={() => this.setState({ width: 4})}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n\r\n\r\n\r\nexport default class Location extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcolor: \"#444444\"\r\n\t\t}\r\n\t}\r\n\t\r\n    render () {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<rect\r\n\t\t\t\t\tx={200} y={this.props.location.y-10}\r\n\t\t\t\t\twidth={1800} height={this.props.location.height}\r\n\t\t\t\t\tfill={this.state.color}\r\n\t\t\t\t\tonMouseEnter={() => this.setState({ color: \"#555555\" })}\r\n\t\t\t\t\tonMouseLeave={() => this.setState({ color: \"#444444\" })}\r\n\t\t\t\t/>\r\n\t\t\t\t<text\r\n\t\t\t\t\tx={205}\r\n\t\t\t\t\ty={this.props.location.y+(this.props.location.height/2)-5}\r\n\t\t\t\t\tfill=\"#FFFFFF\"\r\n\t\t\t\t\tstyle={{ fontFamily: \"Courier\"}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.location.displayName}\r\n\t\t\t\t</text>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\n","export default {\r\n\t\"Jonas\":  \"rgb(66, 179, 245)\",\r\n\t\"Martha\": \"rgb(199, 64, 247)\",\r\n\t\"Magnus\": \"rgb(255, 199, 15)\"\r\n};","var data = {\r\n\tcharacters: [\r\n\t\t{\r\n\t\t\tname: \"Jonas\",\r\n\t\t\tlines: [\r\n\t\t\t\t{ type: \"arrival\", year: 2019, location: \"Bridge\", time: 800, offset: 0 },\r\n\t\t\t\t{ type: \"travel\", location: \"Nielsen Home\", time: 1200, offset: 0 }\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Jonas\",\r\n\t\t\tlines: [\r\n\t\t\t\t{ type: \"arrival\", year: 2019, location: \"Nielsen Home\", time: 800, offset: 0 },\r\n\t\t\t\t{ type: \"exit\", location: \"Nielsen Home\", time: 1100, offset: 0 }\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Martha\",\r\n\t\t\tlines: [\r\n\t\t\t\t{ type: \"arrival\", year: 2019, location: \"Bridge\", time: 800, offset: 5 },\r\n\t\t\t\t{ type: \"travel\", location: \"Nielsen Home\", time: 1200, offset: 5 }\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Magnus\",\r\n\t\t\tlines: [\r\n\t\t\t\t{ type: \"arrival\", year: 2019, location: \"Bridge\", time: 600, offset: 15 },\r\n\t\t\t\t{ type: \"travel\", location: \"Forrest\", time: 800, offset: 0 },\r\n\t\t\t\t{ type: \"travel\", location: \"Caves\", time: 830, offset: 0 },\r\n\t\t\t\t{ type: \"travel\", location: \"Wormhole\", time: 900, offset: 0 },\r\n\t\t\t\t{ type: \"timetravel\", year: 1986, location: \"Wormhole\", time: 930, offset: 0 },\r\n\t\t\t\t{ type: \"exit\", location: \"Nielsen Home\", time: 1500, offset: 0 }\r\n\t\t\t]\r\n\t\t}\r\n\t],\r\n\tevents: [\r\n\t\t{\r\n\r\n\t\t}\r\n\t]\r\n}\r\n\r\n// convert 60 minutes into 100s\r\nfor (var i in data.characters) {\r\n\tfor (var j in data.characters[i].lines) {\r\n\t\tlet time = data.characters[i].lines[j].time;\r\n\t\ttime = (time - (time % 100.0)) + ((time % 100.0) * (100.0/60.0));\r\n\t\tdata.characters[i].lines[j].time = time;\r\n\t}\r\n}\r\n\r\n\r\nexport default data;","import React, {Component} from 'react';\r\n\r\nimport SVGViewbox from './svg/svg-viewbox.component';\r\nimport CharacterLine from './svg/character-line.component';\r\nimport Location from './svg/location.component';\r\n\r\n\r\nimport locations from '../data/locations';\r\nimport characterColors from '../data/characterColors';\r\n\r\nimport day15_11_2019 from '../data/days/15.11.2019';\r\n\r\nexport default class Timeline extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\r\n\r\n\t\t/*\r\n\t\t\tConnection Types:\r\n\t\t\t\t- Horizontal Line (x End)\r\n\t\t\t\t- Vertical Line (Timetravel) (y Start y End)\r\n\t\t\t\t- Connection (Travel) (y End x constant or dynamic based on y)\r\n\t\t\t\t- Arrival (x Start y Start)\r\n\t\t\t\t- Exit\r\n\r\n\t\t\tConnections always start at the previous point\r\n\r\n\t\t\tConnections have 'from' episode number 'to' episode number ( so we can swap them out in case information and connections are added)\r\n\t\t\tEvents too so we can update them with additional information \r\n\r\n\r\n\t\t\tconnections: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"idle | timetravel | travel | arrival | exit\",\r\n\t\t\t\t\tepisodeFrom: number (from which epsiode onwards is this connection shown)\r\n\t\t\t\t\tepisodeTo: number, (until which episode is this connection shown? then replaced by another)\r\n\t\t\t\t\t// date: { day, month, (year) } (maybe group connections by day, then only year for y coord is relevant)\r\n\t\t\t\t\t// time: { start and/or end hourminute information which is then transformed into coords }\r\n\t\t\t\t\tcoords: { point information based on connection type (see above) }\r\n\t\t\t\t\tgroupdID: number\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t\tevents: [\r\n\t\t\t\t{\r\n\r\n\t\t\t\t}\r\n\t\t\t]\r\n\r\n\t\t*/\r\n\r\n\t\tthis.onCharacterHover = this.onCharacterHover.bind(this);\r\n\r\n\r\n\t\tthis.state = {\r\n\t\t\tepisode: 1,\r\n\t\t\tcurrentDay: 15,\r\n\t\t\tcurrentMonth: 11,\r\n\t\t\tdata: {\r\n\t\t\t\t11: {\r\n\t\t\t\t\t15: day15_11_2019\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlocations: locations,\r\n\t\t\tcharacterColors: characterColors,\r\n\r\n\t\t\thoveredCharacter: undefined\r\n\t\t};\r\n\t}\r\n\t\r\n    render () {\r\n\r\n\t\tlet locations = [];\r\n\t\tfor (var year of [2019, 1986]) {\r\n\t\t\tfor (var locationName in this.state.locations[year]) {\r\n\t\t\t\tlocations.push(<Location \r\n\t\t\t\t\tlocation={this.state.locations[year][locationName]}\r\n\t\t\t\t\tkey={\"Location\" + locationName + year}\r\n\t\t\t\t\tyear={year}\r\n\t\t\t\t/>);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet characterLines = this.state.data[this.state.currentMonth][this.state.currentDay].characters.map((character, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<CharacterLine \r\n\t\t\t\t\tcharacter={character}\r\n\t\t\t\t\tlocations={this.state.locations}\r\n\t\t\t\t\tcolor={this.state.characterColors[character.name]}\r\n\t\t\t\t\tonCharacterHover={this.onCharacterHover}\r\n\t\t\t\t\thoveredCharacter={this.state.hoveredCharacter}\r\n\t\t\t\t\tkey={\"CharacterLine\"+i}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<SVGViewbox>\r\n\t\t\t\t{locations}\r\n\t\t\t\t{characterLines}\r\n\t\t\t</SVGViewbox>\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tonCharacterHover(characterName) {\r\n\t\tthis.setState({\r\n\t\t\thoveredCharacter: characterName\r\n\t\t})\r\n\t}\r\n\r\n}\r\n\r\n","import React from 'react';\n\nimport './App.css';\n\nimport Timeline from './components/timeline.component';\n\n\nfunction App() {\n\n  \treturn (\n\t\t<div className=\"App\">\n\t\t\t<Timeline />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}